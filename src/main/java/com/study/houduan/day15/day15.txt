反射(Reflection):Java在运行期间可以动态加载,解析和使用在编译期间不确定的类型
                动态获取类的信息以及使用对象的方法的机制称为反射又称为内省(Introspection)
                动态加载机制:并非一次性加载,而是在需要的时候加载
                可以通过虚拟机参数来    java -verbose:class   查看
                
                反射机制提供的功能:
                          1.加载运行时才能确定的类型
                          2.解析类的结构,获取类里面的信息
                          3.操作类型或者实例
                                      1.访问属性
                                      2.调用方法
                                      3.创建对象
反射的API :1)java.lang.Class 类
                           用于表示运行时的Java数据类型(数组 接口 枚举 基本类型  类 注解)
                       注意:在类加载的时候,Java会自动给用户创建需要的Class对象(用户可以获取)

                   //获取Class实例的5种方法
                   1.对象名.getClass()
                   2.类名.class;
                   3.Class.forName("类的全限定名");
                   4.基本类型.class
                   5.包装类型.class
---------------------------------------------------------------------------------------------------------------------------------
               2)在java.lang.reflect 包下面
                     java.lang.reflect.Field   提供有关类或接口的单个字段的信息，
                                                        以及对它的动态访问权限。
                                                       反射的字段可能是一个类（静态）字段或实例字段。 
                    java.lang.reflect.Method  提供关于类或接口上单独某个方法（以及如何访
                                                           问该方法）的信息。所反映的方法可能是类方法或实例方法（包括抽象方法）。 
                    java.lang.reflect.Constructor   提供关于类的单个构造方法的信息以及对它的访问权限
                    java.lang.reflect.Array    类提供了动态创建和访问 Java 数组的方法。
-------------------------------------------------------------------------------------------------------------------------------------
Class 类中常用的方法:
                  关于属性的:
                                Field[] getFields()    返回的是所有公开的属性
                                Field[] getDeclaredFields()   返回所有的属性
                                Field   getField(String name)  根据属性名称来查询该属性,该属性必须是公开的
                                Field   getDeclaredField(String name)  ......公开的
  
                  关于方法的:
                                Method[] getMethods():获取的公开的方法,包括从父类中继承过来的
                                Method[] getDeclaredMethods();//获取所有的,但是不包括从父类中继承过来的方法
                                Method   getDeclaredMethod(String name, Class<?>... parameterTypes)
                          
                  关于构造方法的:
                         Constructor<?>[]   getDeclaredConstructors() ;获取所有构造

                         注意:反射调用构造方法
                         1.调用空参构造有2种方法,第一种是Class类中的newInstance()
                                第二种是Constructor中的newInstance(可变列表)
                           2.调用有参构造只有1种方法    Constructor中的newInstance(可变列表)

                  其他方法:
                           Package getPackage():返回类所在的包
                           Class<? super T>      getSuperclass() :返回超类
                           Class<?>[] getInterfaces  返回所实现的接口

-----------------------------------------------------------------------------------------
java.lang.reflect.Field
                          常用方法:
                               int  getModifiers();//Java语言访问修饰符在底层都是2的次方,提高效率
                               Class<?> getType()   返回声明类型
                               String getName()    返回属性名
java.lang.reflect.Method
                           常用方法:
                                    int getModifiers();//同上
                                    Class<?>  getReturnType() ;//方法的返回类型
                                    String getName();// com.tz.day15.Point.setX
                                    String getSimpleName();//setX
                                    Class<?>[] getParameterTypes() ;按照声明顺序返回 Class 对象的数组，这些对象描述了此 Method 对象所表示的方法的形参类型。
                                     invoke(Object obj,参数列表)
java.lang.reflect.Array
                          利用反射技术获取数组的长度/数组的组件类型/根据下标获取值
---------------------------------------------------------------------------------------------------------------




